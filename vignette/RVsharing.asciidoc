:toc:
:numbered:
:data-uri:

<<junk,echo=FALSE>>=    Somehow, this avoids the "figure margins too large" error ~kbroman
par(mar=rep(0,4))
@

<<options, echo=FALSE, eval = TRUE, echo = FALSE>>=
  options(width=75, continue = " ")
  library("Bureau")
@ 
== RVSharing Examples ==

=== Siblings ===

<<RVsharing.toy2, eval = TRUE, echo = TRUE>>=
id <- paste0("sub", 1:4)
fa.id <- c(NA,NA,"sub1","sub1")
ma.id <- c(NA,NA,"sub2","sub2")
test.ped <- pedigree(id = id, dadid = fa.id, momid = ma.id, sex = c(1,2,1,2))
@ 
<<showped>>=
test.ped
@ 
<<plotped, fig = TRUE, width = 3, eval = TRUE, echo = TRUE>>=
plot(test.ped)
@ 
<<kinship, echo = FALSE, eval = FALSE>>=
2*kinship(test.ped)
@ 
Apply the RVsharing method using three id vectors. // which calls the function defined in "rare_variant_sharing_v3.R"
<<test>>=
RVsharing(test.ped)
@ 
Now use the pedigree object defined in kinship2.
<<test2>>=
RVsharing(id = id, dad.id = fa.id, mom.id = ma.id )
@ 
=== First Cousins ===
<<RVsharing.toy, eval = TRUE, echo = FALSE>>=
id <- paste0("sub", 1:8)
fa.id <- c(NA,NA,NA,"sub1","sub1", NA,"sub3","sub5")
ma.id <- c(NA,NA,NA,"sub2","sub2", NA,"sub4","sub6")
test.ped <- pedigree(id = id, dadid = fa.id, momid = ma.id, sex = c(1,2,1,2,1,2,2,2))
@ 
<<showped, echo = FALSE, results = hide>>=
test.ped
@ 

<<plotped2, fig = TRUE, width = 3, eval = TRUE, echo = FALSE>>=
plot(test.ped)
@ 

<<kinship, echo = FALSE, eval = FALSE>>=
2*kinship(test.ped)
@ 
For first cousins it works right now with ID
 vectors...
<<test>>=
RVsharing(id = id, dad.id = fa.id, mom.id = ma.id )
@
...but not with the pedigree object.  I think it has to do with how the parents are indexed in the pedigree object of kinship2.
<<test, eval = FALSE, echo = TRUE>>=
RVsharing(test.ped)
@ 
Gives the following warnings and error.
----
Error in fdi[nfd] = which(id == iancestors[ia]) : 
  replacement has length zero
In addition: Warning messages:
1: In match(x, table, nomatch = 0L) : NAs introduced by coercion
2: NAs introduced by coercion 
3: In match(x, table, nomatch = 0L) : NAs introduced by coercion
4: In match(x, table, nomatch = 0L) : NAs introduced by coercion
Execution halted
----
=== Second Cousins ===
<<RVsharing.toy, eval = TRUE, echo = FALSE>>=
id <- paste0("sub", 1:12)
fa.id <- c(NA,NA,NA,"sub1","sub1", NA,"sub3","sub5",NA,NA,"sub9","sub10")
ma.id <- c(NA,NA,NA,"sub2","sub2", NA,"sub4","sub6",NA,NA,"sub7","sub8")
test.ped <- pedigree(id = id, dadid = fa.id, momid = ma.id, sex = c(1,2,1,2,1,2,2,2,1,1,2,2))
@ 
<<showped, echo = FALSE, results = hide>>=
test.ped
@ 

<<plotped3, fig = TRUE, width = 3, eval = TRUE, echo = FALSE>>=
plot(test.ped)
@ 

<<kinship, echo = FALSE, eval = FALSE>>=
2*kinship(test.ped)
@ 
<<test, echo = TRUE, eval = FALSE>>=
RVsharing(id = id, dad.id = fa.id, mom.id = ma.id )
@
Not working for either.
----
Error in sum(sapply(iancestor.as.descendant[[i]][1:length(spousevec)],  : 
  invalid 'type' (list) of argument
In addition: Warning messages:
1: In match(x, table, nomatch = 0L) : NAs introduced by coercion
2: In currentnonfounders[i] = ifelse(dad.id[id == currentdad] == 0,  :
  number of items to replace is not a multiple of replacement length
3: In currentfounders[i] = ifelse(dad.id[id == currentdad] == 0, currentdad,  :
  number of items to replace is not a multiple of replacement length
4: In currentnonfounders[i] = ifelse(dad.id[id == currentdad] == 0,  :
  number of items to replace is not a multiple of replacement length
5: In currentfounders[i] = ifelse(dad.id[id == currentdad] == 0, currentdad,  :
  number of items to replace is not a multiple of replacement length
Execution halted
----